import SwiftUI

struct SignUpPreferenceView: View {
    @EnvironmentObject var registerViewModel: RegisterViewModel
    // MARK: - ÏÉÅÌÉú Î≥ÄÏàò
    @State private var isButtonEnabled: Bool = false
    @State private var navigateToNextView: Bool = false
    @State private var keyboardHeight: CGFloat = 0
    @StateObject private var keyboardManager = KeyboardManager.shared
    
    @State private var selectedOptions: [String: String] = [:]
    @State private var ageMin: Float = 18
    @State private var ageMax: Float = 35
    @State private var maxDistance: Float = 50
    @State private var selectedProperties: Set<Int> = []
    @State private var selectedCompanies: Set<Int> = []
    
    // ProgressBar ÏÉÅÌÉú
    private let totalSignUpSteps = 8
    private let currentSignUpStep = 7
    
    var body: some View {
        NavigationStack {
            ZStack(alignment: .bottom) {
                VStack(spacing: 0) {
                    // ‚úÖ Progress Bar
                    ProgressView(value: Float(currentSignUpStep) / Float(totalSignUpSteps))
                        .progressViewStyle(LinearProgressViewStyle(tint: .blue))
                        .padding(.top, 30)
                        .padding(.horizontal, 16)
                    
                    GeometryReader { geometry in
                        VStack(alignment: .leading, spacing: 20){
                            // ‚úÖ Header
                            SignUpHeaderView(title: "Ïñ¥Îñ§ ÏÇ¨ÎûåÏùÑ ÎßåÎÇòÍ≥† Ïã∂ÏúºÏÑ∏Ïöî?")
                            
                            // ‚úÖ ÏÑπÏÖò Î¶¨Ïä§Ìä∏
                            List {
                                // üîπ Í∏∞Î≥∏ Ï†ïÎ≥¥ ÏÑπÏÖò
                                Section(header: Text("Í∏∞Î≥∏ Ï†ïÎ≥¥").font(.headline)) {
                                    SignUpProfileDropdownCell(
                                        title: "ÏõêÌïòÎäî ÏÑ±Î≥Ñ",
                                        options: ["ÎÇ®ÏÑ±", "Ïó¨ÏÑ±"],
                                        selectedOption: $selectedOptions["ÏõêÌïòÎäî ÏÑ±Î≥Ñ"]
                                    )
                                    
                                    SignUpSliderCell(
                                        title: "ÏµúÏÜå ÎÇòÏù¥",
                                        value: $ageMin,
                                        range: 18...127,
                                        unit: "ÏÇ¥"
                                    )
                                    
                                    SignUpSliderCell(
                                        title: "ÏµúÎåÄ ÎÇòÏù¥",
                                        value: $ageMax,
                                        range: 18...127,
                                        unit: "ÏÇ¥"
                                    )
                                    
                                    SignUpSliderCell(
                                        title: "ÏµúÎåÄ Í±∞Î¶¨",
                                        value: $maxDistance,
                                        range: 0...127,
                                        unit: "km"
                                    )
                                }
                                
                                // üîπ Ï∂îÍ∞Ä Ï†ïÎ≥¥ ÏÑπÏÖò
                                Section(header: Text("Ï∂îÍ∞Ä Ï†ïÎ≥¥").font(.headline)) {
                                    SignUpProfileDropdownCell(
                                        title: "ÏõêÌïòÎäî Ï≤¥Ìòï",
                                        options: ["ÎßàÎ¶Ñ", "ÌÜµÌÜµ", "Í∑ºÏú°Ïßà"],
                                        selectedOption: $selectedOptions["ÏõêÌïòÎäî Ï≤¥Ìòï"]
                                    )
                                    
                                    SignUpProfileDropdownCell(
                                        title: "ÏõêÌïòÎäî ÍµêÏ†ú ÏÉÅÌÉú",
                                        options: ["ÎØ∏Ìòº", "Í∏∞Ìòº", "ÎèåÏã±"],
                                        selectedOption: $selectedOptions["ÏõêÌïòÎäî ÍµêÏ†ú ÏÉÅÌÉú"]
                                    )
                                    
                                    SignUpProfileDropdownCell(
                                        title: "ÏõêÌïòÎäî Ï¢ÖÍµê",
                                        options: ["Î¨¥Íµê", "Í∏∞ÎèÖÍµê", "Î∂àÍµê", "Ï≤úÏ£ºÍµê"],
                                        selectedOption: $selectedOptions["ÏõêÌïòÎäî Ï¢ÖÍµê"]
                                    )
                                }
                                
                                // üîπ ÌäπÏÑ± ÏÑ†ÌÉù ÏÑπÏÖò
                                Section(header: Text("ÌäπÏÑ± ÏÑ†ÌÉù").font(.headline)) {
                                    Button("ÌäπÏÑ± ÏÑ†ÌÉùÌïòÍ∏∞") {
                                        // ÌäπÏÑ± ÏÑ†ÌÉù Î™®Îã¨
                                    }
                                }
                                
                                // üîπ ÌöåÏÇ¨ ÏÑ†ÌÉù ÏÑπÏÖò
                                Section(header: Text("ÎßåÎÇòÍ∏∞ Ïã´ÏùÄ ÌöåÏÇ¨ ÏÑ†ÌÉù").font(.headline)) {
                                    Button("ÌöåÏÇ¨ ÏÑ†ÌÉùÌïòÍ∏∞") {
                                        // ÌöåÏÇ¨ ÏÑ†ÌÉù Î™®Îã¨
                                    }
                                }
                            }
                            .listStyle(.grouped)
                            
                            
                        } // VStack end
                        
                    } // GeometryReader end
                    .padding(.bottom, 100)
                    .background(Color.white)
                    
                }
                VStack {
                    Spacer()
                    SignUpReusableButton(title: "Îã§Ïùå", isEnabled: isButtonEnabled) {
                        handleNextButtonTap()
                    }
                    .disabled(!isButtonEnabled)
                    .padding(.bottom, keyboardManager.keyboardHeight > 0 ? 10 : UIScreen.main.bounds.height / 30)
                    .animation(.easeOut(duration: 0.3), value: keyboardManager.keyboardHeight)
                    
                }
                .navigationBarTitleDisplayMode(.inline)
                .navigationBarBackButtonHidden(true)
                .navigationDestination(isPresented: $navigateToNextView) {
                    SignUpLocationView()
                }
                
            } // Í∞ÄÏû• Î∞îÍπ•Ï™Ω Vstack
            .onTapGesture {
                keyboardManager.hideKeyboard()
            }
            
            .onAppear {
                // ÌÇ§Î≥¥Îìú Í¥ÄÏ∞∞Ïûê ÏãúÏûë
                KeyboardObserver.shared.startListening { height in
                    SignUpDebugLog.debugLog("ÌÇ§Î≥¥Îìú ÎÜíÏù¥ ÏóÖÎç∞Ïù¥Ìä∏: \(height)")
                    //                    print("ÌÇ§Î≥¥Îìú ÎÜíÏù¥ ÏóÖÎç∞Ïù¥Ìä∏: \(height)")
                    withAnimation(.easeOut(duration: 0.3)){
                        keyboardHeight = height
                    }
                }
            }
            
            .onDisappear {
                // ÌÇ§Î≥¥Îìú Í¥ÄÏ∞∞Ïûê Ìï¥Ï†ú
                KeyboardObserver.shared.stopListening()
            }
            
        }
    }
    
    // MARK: - Í≤ÄÏ¶ù Ìï®Ïàò
        private func isFormValid() -> Bool {
            return !selectedOptions.isEmpty
        }
    
    // MARK: - Î≤ÑÌäº ÎèôÏûë
    private func handleNextButtonTap() {
        navigateToNextView = true
    }
    
}



struct SignUpPreferenceView_Previews: PreviewProvider {
    static var previews: some View {
        SignUpPreferenceView()
    }
}

struct SignUpProfileDropdownCell: View {
    var title: String
    var options: [String]
    @Binding var selectedOption: String?
    
    var body: some View {
        HStack {
            Text(title)
                .font(.body)
            Spacer()
            Menu {
                ForEach(options, id: \.self) { option in
                    Button(option) {
                        selectedOption = option
                    }
                }
            } label: {
                Text(selectedOption ?? "ÏÑ†ÌÉù")
                    .foregroundColor(.gray)
                    .padding(.horizontal, 8)
                    .frame(height: 30)
                    .background(Color(.systemGray6))
                    .cornerRadius(5)
            }
        }
    }
}

struct SignUpSliderCell: View {
    var title: String
    @Binding var value: Float
    var range: ClosedRange<Float>
    var unit: String
    
    var body: some View {
        VStack(alignment: .leading) {
            Text("\(title): \(Int(value)) \(unit)")
                .font(.subheadline)
            Slider(value: $value, in: range, step: 1)
                .accentColor(.blue)
        }
        .padding(.vertical, 8)
    }
}
